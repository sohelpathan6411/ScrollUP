import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      scaffoldBackgroundColor: appTheme.whiteA700,
      textTheme: TextTheme(
        headline1: TextStyle(
            color: appTheme.black900,
            letterSpacing: 1,
            wordSpacing: 1,
            fontWeight: FontWeight.w600,
            fontSize: 22.fSize),
        headline2: TextStyle(
            color: appTheme.black900,
            letterSpacing: 1,
            wordSpacing: 1,
            fontWeight: FontWeight.w600,
            fontSize: 20.fSize),
        headline3: TextStyle(
            color: appTheme.black900,
            letterSpacing: 1,
            wordSpacing: 1,
            fontWeight: FontWeight.w500,
            fontSize: 18.fSize),
        headline4: TextStyle(
            color: appTheme.black900,
            letterSpacing: 1,
            wordSpacing: 1,
            fontWeight: FontWeight.w400,
            fontSize: 14.fSize),
        headline5: TextStyle(
            color: appTheme.blueGray400,
            letterSpacing: 1,
            wordSpacing: 1,
            fontWeight: FontWeight.w500,
            fontSize: 20.fSize),
        headline6: TextStyle(
            color: appTheme.blueGray400,
            letterSpacing: 1,
            wordSpacing: 1,
            fontWeight: FontWeight.w400,
            fontSize: 16.fSize),
      ),
      appBarTheme: AppBarTheme(
          iconTheme: IconThemeData(color: appTheme.black900),
          centerTitle: true,
          backgroundColor: appTheme.whiteA700,
          titleTextStyle: TextStyle(
              color: appTheme.black900,
              letterSpacing: 1,
              wordSpacing: 1,
              fontWeight: FontWeight.w600,
              fontSize: 20.fSize),
          elevation: 0),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray400 => Color(0XFF888888);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  Color get blueShade800 => Color(0xff0165FB);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
